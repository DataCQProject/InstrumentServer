# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Picoscope 6000 Series


# The version string should be updated whenever changes are made to this config file
version: 1.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: Picoscope_6000/Picoscope_6000.py


interface: USB

[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: 6000

# Check instrument model id at startup (True or False). Default is False
check_model: True

# List of models supported by this driver
model_id_1: Pico Technology,6000


# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa: False

# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.


[Wave Type]
datatype: COMBO
def_value: Sine
combo_def_1: Sine
combo_def_2: Square
combo_def_3: Triangle
combo_def_4: Ramp Up
combo_def_5: Ramp Down
cmd_def_1: Sine
cmd_def_2: Square
cmd_def_3: Triangle
cmd_def_4: Ramp Up
cmd_def_5: Ramp Down

[Frequency]
datatype: DOUBLE
def_value: 1E3
unit: Hz
state_quant: Function
state_value_1: Sinusoid
state_value_2: Ramp
state_value_3: Pulse
state_value_4: Square
state_value_5: Noise
state_value_6: User

[Voltage]
datatype: DOUBLE
def_value: 0.1
unit: V
set_cmd: :VOLT
state_quant: Function
state_value_1: Sinusoid
state_value_2: Ramp
state_value_3: Pulse
state_value_4: Square
state_value_5: Noise
state_value_6: User

[Offset]
datatype: DOUBLE
def_value: 0.0
unit: V

[Amplitude]
datatype: DOUBLE
def_value: 1.0
unit: V

